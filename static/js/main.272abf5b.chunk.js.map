{"version":3,"sources":["componentns/NotFound.jsx","style/not-found.js","componentns/Timer/AlertDialog.jsx","style/timer-style.js","addition/ViewTime.js","constants/tasks-constants.js","constants/timer-constants.js","actions/action.js","reducers/selectors.js","componentns/Timer/Timer.jsx","style/tasks-style.js","componentns/Tasks/TaskLog.jsx","addition/DateTaskChart.js","componentns/Tasks/TaskChart.jsx","componentns/Tasks/Tasks.jsx","containers/TaskTimer.jsx","componentns/Tasks/Info.jsx","containers/RouterComponent.jsx","localStorage/localStorage.js","addition/GenerateTask.js","saga/tasks-saga.js","saga/timer-saga.js","saga/main-saga.js","reducers/initial-state.js","reducers/timer-reducers.js","reducers/tasks-reducers.js","reducers/reducers.js","index.js"],"names":["withStyles","theme","notFoundBtn","marginTop","boxShadow","backgroundColor","color","infoLink","textDecoration","props","_ref","location","classes","react_default","a","createElement","Paper","Typography","variant","component","align","react_router_dom","to","className","Button","alertDialog","alertBtn","Dialog","open","isTaskName","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","onClick","updateIsTaskName","autoFocus","formatTime","timeIsNow","Date","toLocaleTimeString","formatTimeTimer","toISOString","substr","ADD_TASKS","DELETE_TASKS","GENERATE_TASKS","TASK_LOCALSTORAGE","ADD_TO_STORE","START_TIMER","START_ACTIVE_TIMER","STOP_TIMER","UPDATE_TIMER","ACTIVE_TIMER","INACTIVE_TIMER","CHANGE_TASK_NAME","actionCreator","newAction","actionPayload","type","payload","getStatusTimer","state","timer","statusTimer","getStartTimer","startTimer","getCurrentTime","currentTime","getNameTask","nameTask","Timer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","tickOfTimer","setTimer","setInterval","now","onStartTimer","onStopTimer","setState","taskId","taskName","taskStartTime","taskSpendTime","clearInterval","value","takeTaskName","e","target","console","log","_this2","TextField","timerTextField","placeholder","onChange","Avatar","timerAvatar","timerBtn","Timer_AlertDialog","React","Component","connect","display","flexDirection","alignItems","margin","fontSize","fontWeight","marginBottom","height","width","fontFamily","& input::placeholder","textAlign","opacity","tasksStyle","generateBtn","& button","tableHead","& th","tasksTable","& th, td","& a","tasksTab","& span","tasks","Table","TableHead","TableRow","map","name","index","TableCell","key","TableBody","task","scope","concat","dateTaskChart","dateForChart","i","push","minutes","start","spend","startHour","getHours","startMinute","getMinutes","endHour","endMinute","getTime","getObjTime","times","generateTasks","date","es6","data","top","right","left","bottom","dataKey","fill","Tasks","AppBar","position","Tabs","aria-label","Tab","label","react_router","exact","path","TaskLog","TaskChart","router","TaskTimer","componentns_Timer_Timer","componentns_Tasks_Tasks","match","params","NotFound","dataForTableBody","title","history","esm","Info","setItem","localStorage","getItem","removeItem","clearStorage","clear","generate","generatedTasks","startTime","setHours","endTime","amountTask","getRndInteger","newTaskStartTime","newTaskSpendTime","min","max","parseInt","Math","floor","random","addTaskLocalStorage","deleteTaskLocalStorage","generateTasksSaga","watchTask","regenerator_default","wrap","_context","prev","next","select","sent","JSON","stringify","stop","_marked","_context2","_marked2","_context3","put","_marked3","_context4","all","takeLatest","_marked4","activeTimerLocalStorage","setTaskNameToLocalStorage","inactiveTimeLocalStorage","watchTimer","takeStart","timer_saga_marked","takeName","timer_saga_marked2","timer_saga_marked3","timer_saga_marked4","mainSaga","main_saga_marked","initialState","store","localTasks","localTimer","localTaskName","parse","timerReducer","arguments","length","undefined","action","_objectSpread","taskReducer","toConsumableArray","newState","splice","createRootReducer","combineReducers","connectRouter","sagaMiddleware","createSagaMiddleware","historyStage","basename","URL","homepage","pathname","createBrowserHistory","createStore","compose","applyMiddleware","routerMiddleware","run","ReactDom","render","es","containers_RouterComponent","document","getElementById"],"mappings":"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","file":"static/js/main.272abf5b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Typography, Paper } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { notFoundStyle } from \"style/not-found\";\r\n\r\nconst NotFound = (props,{ location }) => {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Typography variant=\"h5\" component=\"h3\" align=\"center\">\r\n          Page not found\r\n        </Typography>\r\n        <Typography component=\"p\" align=\"center\">\r\n          The requested page <code>{}</code> does not exist. If\r\n          you entered a web address please check it was correct.\r\n        </Typography>\r\n        <Link to=\"/\" className={classes.infoLink}>\r\n          <Button className={classes.notFoundBtn}>GO BACK</Button>\r\n        </Link>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotFound.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(notFoundStyle)(NotFound);\r\n","export const notFoundStyle = theme => ({\r\n  notFoundBtn: {\r\n    marginTop: \"15px\",\r\n    boxShadow: \"0 0 10px rgba(0, 0, 0, 0.4)\",\r\n    backgroundColor: \"#01bcd5\",\r\n    color: \"#fff\"\r\n  },\r\n  infoLink: {\r\n    textDecoration: \"none\",\r\n  }\r\n});\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {alertDialogStyle} from 'style/timer-style';\r\n\r\nconst AlertDialog = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <Dialog\r\n      open={props.isTaskName}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\" className={classes.alertDialog}>\r\n        {'Empty task name'}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          You are trying close your task without name, enter the title and try\r\n          again!\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            props.updateIsTaskName(false);\r\n          }}\r\n          autoFocus\r\n          className={classes.alertBtn}\r\n        >\r\n          CLOSE\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nAlertDialog.propTypes = {\r\n  isTaskName:PropTypes.bool,\r\n  updateIsTaskName:PropTypes.func,\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(alertDialogStyle)(AlertDialog);\r\n","export const timerStyles = theme => ({\r\n  timer: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    alignItems: `center`,\r\n    margin: `0 auto`,\r\n    fontSize: `24px`,\r\n    color: `#3d60cc`,\r\n    fontWeight: 700\r\n  },\r\n  timerBtn: {\r\n    boxShadow: `0 0 10px rgba(0, 0, 0, 0.4)`,\r\n    marginBottom: `20px`,\r\n    color: `#3d60cc`,\r\n    fontWeight: 700\r\n  },\r\n  timerAvatar: {\r\n    margin: `20px 0 20px 0`,\r\n    height: `250px`,\r\n    width: `250px`,\r\n    backgroundColor: `#fff`,\r\n    boxShadow: `0 3px 8px 2px rgba(0, 0, 0, 0.3)`,\r\n    fontWeight: 500,\r\n    fontSize: `2.5rem`,\r\n    fontFamily: `'Yantramanav', sans-serif`,\r\n    color: `#3d60cc`\r\n  },\r\n  timerTextField: {\r\n    marginTop: `20px`,\r\n    \"& input::placeholder\": {\r\n      textAlign: `center`,\r\n      opacity: 1,\r\n      color: `#3d60cc`,\r\n      fontWeight: 700\r\n    }\r\n  }\r\n});\r\nexport const alertDialogStyle = theme => ({\r\n  alertDialog: {\r\n    color: `#bf2b5c`\r\n  },\r\n  alertBtn: {\r\n    color: `#01bcd5`\r\n  }\r\n});\r\n","export const formatTime = timeIsNow => {\r\n  const dateIsNow = new Date(timeIsNow);\r\n  return dateIsNow.toLocaleTimeString();\r\n};\r\n\r\nexport const formatTimeTimer = timeIsNow => {\r\n  const dateIsNow = new Date(timeIsNow);\r\n  return dateIsNow.toISOString().substr(11, 8);\r\n};\r\n","export const ADD_TASKS = 'ADD_TASKS';\r\nexport const DELETE_TASKS = 'DELETE_TASKS';\r\nexport const GENERATE_TASKS = 'GENERATE_TASKS';\r\nexport const TASK_LOCALSTORAGE = 'TASK_LOCALSTORAGE';\r\nexport const ADD_TO_STORE = 'ADD_TO_STORE';\r\nexport const UPDATE_SYNC_DATA = 'UPDATE_SYNC_DATA';\r\n","export const START_TIMER = 'START_TIMER';\r\nexport const START_ACTIVE_TIMER = 'START_ACTIVE_TIMER';\r\nexport const STOP_TIMER = 'STOP_TIMER';\r\nexport const UPDATE_TIMER = 'UPDATE_TIMER';\r\nexport const ACTIVE_TIMER = 'ACTIVE_TIMER';\r\nexport const INACTIVE_TIMER = 'INACTIVE_TIMER';\r\nexport const CHANGE_TASK_NAME = 'CHANGE_TASK_NAME';\r\n","import { GENERATE_TASKS } from 'constants/tasks-constants';\r\n\r\nexport const actionCreator = (newAction, actionPayload) => ({\r\n    type: newAction,\r\n    payload: actionPayload\r\n  });\r\n  export const generateTasks = () => ({\r\n    type: GENERATE_TASKS\r\n  });","export const getStatusTimer = state => state.timer.statusTimer;\r\nexport const getStartTimer = state => state.timer.startTimer;\r\nexport const getCurrentTime = state => state.timer.currentTime;\r\nexport const getNameTask = state => state.timer.nameTask;","import React from \"react\";\r\nimport AlertDialog from \"componentns/Timer/AlertDialog\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextField, Button, Avatar } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { formatTimeTimer } from \"addition/ViewTime\";\r\nimport {\r\n  ADD_TASKS\r\n} from \"constants/tasks-constants\";\r\nimport {\r\n  ACTIVE_TIMER,\r\n  INACTIVE_TIMER,\r\n  CHANGE_TASK_NAME,\r\n  START_TIMER,\r\n  STOP_TIMER,\r\n  UPDATE_TIMER,\r\n  START_ACTIVE_TIMER\r\n} from \"constants/timer-constants\";\r\nimport { actionCreator } from \"actions/action\";\r\nimport {\r\n  getStatusTimer,\r\n  getStartTimer,\r\n  getCurrentTime,\r\n  getNameTask\r\n} from \"reducers/selectors\";\r\nimport { timerStyles } from \"style/timer-style\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setTimer = null;\r\n    this.state = {\r\n      isTaskName: false\r\n    };\r\n    if (this.props.statusTimer === ACTIVE_TIMER) {\r\n      console.log(this.props)\r\n      this.props.actionCreator(START_ACTIVE_TIMER, {\r\n        currentTime: Date.now() - this.props.startTimer\r\n      });\r\n      this.tickOfTimer();\r\n    }\r\n  }\r\n\r\n  tickOfTimer = () => {\r\n    this.setTimer = setInterval(() => {\r\n      this.props.actionCreator(UPDATE_TIMER, {\r\n        currentTime: Date.now() - this.props.startTimer\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  onStartTimer = () => {\r\n    if (this.props.statusTimer === INACTIVE_TIMER) {\r\n      this.props.actionCreator(START_TIMER, { startTimer: Date.now() });\r\n    }\r\n    this.tickOfTimer();\r\n  };\r\n\r\n  onStopTimer = () => {\r\n    if (!this.props.nameTask)\r\n      return this.setState({ isTaskName: !this.state.isTaskName });\r\n\r\n    this.props.actionCreator(ADD_TASKS, {\r\n      taskId: Date.now(),\r\n      taskName: this.props.nameTask,\r\n      taskStartTime: this.props.startTimer,\r\n      taskSpendTime: this.props.currentTime\r\n    });\r\n    this.props.actionCreator(STOP_TIMER);\r\n    clearInterval(this.setTimer);\r\n  };\r\n\r\n  updateIsTaskName = value => {\r\n    this.setState({ isTaskName: value });\r\n  };\r\n\r\n  takeTaskName = e => {\r\n    this.props.actionCreator(CHANGE_TASK_NAME, {\r\n      nameTask: e.target.value\r\n    });\r\n  };\r\n \r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.timer}>\r\n        <TextField\r\n          className={classes.timerTextField}\r\n          placeholder=\"Name of your task\"\r\n          onChange={e => this.takeTaskName(e)}\r\n          value={this.props.nameTask}\r\n        />\r\n        <Avatar className={classes.timerAvatar}>\r\n          {formatTimeTimer(this.props.currentTime)}\r\n        </Avatar>\r\n        <Button\r\n          onClick={\r\n            this.props.statusTimer === INACTIVE_TIMER\r\n              ? this.onStartTimer\r\n              : this.onStopTimer\r\n          }\r\n          className={classes.timerBtn}\r\n        >\r\n          {this.props.statusTimer === INACTIVE_TIMER ? \"START\" : \"STOP\"}\r\n        </Button>\r\n        <AlertDialog\r\n          isTaskName={this.state.isTaskName}\r\n          updateIsTaskName={this.updateIsTaskName}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTimer.propTypes = {\r\n  statusTimer: PropTypes.string,\r\n  currentTime: PropTypes.number,\r\n  nameTask: PropTypes.string,\r\n  startTimer: PropTypes.number,\r\n  actionCreator: PropTypes.func,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  state => {\r\n    return {\r\n      statusTimer: getStatusTimer(state),\r\n      startTimer: getStartTimer(state),\r\n      currentTime: getCurrentTime(state),\r\n      nameTask: getNameTask(state)\r\n    };\r\n  },\r\n  { actionCreator }\r\n)(withStyles(timerStyles)(Timer));\r\n","export const tasksStyle = theme => ({\r\n  generateBtn: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    alignItems: `flex-end`,\r\n    margin: `20px 30px`,\r\n    \"& button\": {\r\n      boxShadow: `0 0 10px rgba(0, 0, 0, 0.4)`,\r\n      backgroundColor: `#01bcd5`\r\n    }\r\n  },\r\n  tableHead: {\r\n    fontWeight: 700,\r\n    \"& th\": {\r\n      opacity: 0.8\r\n    }\r\n  },\r\n  tasksTable: {\r\n    backgroundColor: `#eaf6ff`,\r\n    \"& th, td\": {\r\n      color: `#3d60cc`,\r\n      fontWeight: 700\r\n    },\r\n    \"& button\": {\r\n      boxShadow: \"0 0 3px rgba(0, 0, 0, 0.3)\",\r\n      backgroundColor: \"#fff\",\r\n      color: \"#3d60cc\"\r\n    }\r\n  },\r\n  infoLink: {\r\n    textDecoration: \"none\",\r\n    \"& a\": {\r\n      textDecoration: \"none\"\r\n    },\r\n    \"& button\": {\r\n      boxShadow: \"0 0 3px rgba(0, 0, 0, 0.3)\",\r\n      backgroundColor: \"#fff\",\r\n      color: \"#3d60cc\"\r\n    }\r\n  },\r\n  tasksTab: {\r\n    backgroundColor: \"#01bcd5\",\r\n    \"& span\": {\r\n      fontWeight: 700\r\n    }\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreator } from \"actions/action\";\r\nimport { formatTime, formatTimeTimer } from \"addition/ViewTime\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DELETE_TASKS } from \"constants/tasks-constants\";\r\nimport { tasksStyle } from \"style/tasks-style\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst TaskLog = props => {\r\n  const { tasks } = props;\r\n  const { classes } = props; \r\n  const nameForHead = [\r\n    \"№\",\r\n    \"Task\",\r\n    \"Time start\",\r\n    \"Time end\",\r\n    \"Time spend\",\r\n    \"Info\",\r\n    \"Delete\"\r\n  ];\r\n  return (\r\n    <div>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow className={classes.tableHead}>\r\n            {nameForHead.map((name, index) => (\r\n              <TableCell align=\"center\" key={index}>\r\n                {name}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tasksTable}>\r\n          {tasks.map((task, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {index + 1}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{task.taskName}</TableCell>\r\n              <TableCell align=\"center\">\r\n                {formatTime(task.taskStartTime)}\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {formatTime(task.taskStartTime + task.taskSpendTime)}\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                {formatTimeTimer(task.taskSpendTime)}\r\n              </TableCell>\r\n              <TableCell align=\"center\" className={classes.infoLink}>\r\n                <Link to={`/task/${index}`}>\r\n                  <Button>INFO</Button>\r\n                </Link>\r\n              </TableCell>\r\n              <TableCell align=\"center\">\r\n                <Button\r\n                  onClick={() => props.actionCreator(DELETE_TASKS, index)}\r\n                >\r\n                  DELETE\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskLog.propTypes = {\r\n  tasks: PropTypes.array,\r\n  actionCreator: PropTypes.func,\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  state => ({ tasks: state.tasks }),\r\n  { actionCreator }\r\n)(withStyles(tasksStyle)(TaskLog));\r\n","const getObjTime = (start, spend) => {\r\n  const startHour = new Date(start).getHours();\r\n  const startMinute = new Date(start).getMinutes();\r\n  const endHour = new Date(start + spend).getHours();\r\n  const endMinute = new Date(start + spend).getMinutes();\r\n  const getTime = [];\r\n  \r\n  for (let i = startHour; i <= endHour; i++) {\r\n    let minutes = 60;\r\n    if (i === startHour && i !== endHour) {\r\n      minutes -= startMinute;\r\n    } else if (i === endHour && i !== startHour) {\r\n      minutes = endMinute;\r\n    } else if (i === startHour && i === endHour) {\r\n      minutes = endMinute - startMinute;\r\n    }\r\n    getTime.push({ name: i, minutes: minutes });\r\n  }\r\n  return getTime;\r\n};\r\n\r\nexport const dateTaskChart = tasks => {\r\n  const dateForChart = [];\r\n  for (let i = 0; i < 24; i++) {\r\n    dateForChart.push({ name: i, minutes: 0 });\r\n  }\r\n  tasks.map(task =>\r\n    getObjTime(task.taskStartTime, task.taskSpendTime).map(\r\n      times =>\r\n        (dateForChart[times.name].minutes =\r\n          (dateForChart[times.name].minutes + times.minutes) % 60)\r\n    )\r\n  );\r\n  return dateForChart;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { generateTasks } from 'actions/action';\r\nimport { dateTaskChart } from 'addition/DateTaskChart';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport { tasksStyle } from  \"style/tasks-style\";\r\n\r\nconst TaskChart = props => {\r\n  const date = dateTaskChart(props.tasks);\r\n  const { classes } = props; \r\n  return (\r\n    <div>\r\n      <ResponsiveContainer height={400}>\r\n        <BarChart\r\n          data={date}\r\n          margin={{\r\n            top: 40,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"minutes\" fill=\"#4b59c4\" />\r\n          <Legend />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n      <div className={classes.generateBtn}>\r\n        <Button onClick={props.generateTasks}>GENERATE</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTaskChart.propTypes = {\r\n  tasks:PropTypes.array,\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({ tasks: state.tasks }),\r\n  { generateTasks }\r\n)(withStyles(tasksStyle)(TaskChart));\r\n","import React from \"react\";\r\nimport TaskLog from \"componentns/Tasks/TaskLog\";\r\nimport TaskChart from \"componentns/Tasks/TaskChart\";\r\nimport PropTypes from \"prop-types\";\r\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { Route, withRouter, Switch, Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { tasksStyle } from \"style/tasks-style\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Tasks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n    // console.log(props.router.location.pathname)\r\n    /*this.state = {\r\n      activeTab: props.router.location.pathname === \"/taskChart\" ? 1 : 0\r\n    };\r\n  }\r\n\r\n  handleChange = (event, activeTab) => {\r\n    this.setState({\r\n      activeTab: activeTab\r\n    });\r\n  };\r\n*/\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <AppBar position=\"static\">\r\n          <Tabs\r\n            value={0}\r\n            aria-label=\"simple tabs example\"\r\n            variant=\"fullWidth\"\r\n            className={classes.tasksTab}\r\n            // onChange={this.handleChange}\r\n          >\r\n          <Tab label=\"TASKS LOG\" />\r\n          <Tab label=\"TASKS CHART\"/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={TaskLog} />\r\n          <Route exact path=\"/taskChart\" component={TaskChart} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTasks.propTypes = { classes: PropTypes.object.isRequired };\r\n\r\nexport default connect(state => ({ router: state.router }))(\r\n  withStyles(tasksStyle)(Tasks)\r\n);\r\n","import React from \"react\";\r\nimport Timer from \"componentns/Timer/Timer\";\r\nimport Tasks from \"componentns/Tasks/Tasks\";\r\n\r\nconst TaskTimer = () => {\r\n  return (\r\n    <div>\r\n      <Timer />\r\n      <Tasks />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskTimer;\r\n","import React from \"react\";\r\nimport NotFound from \"componentns/NotFound\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { formatTime, formatTimeTimer } from \"addition/ViewTime\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {tasksStyle} from  \"style/tasks-style\";\r\n\r\nconst Info = props => {\r\n  const { classes } = props;\r\n  const { id } = props.match.params;\r\n  const task = props.tasks[id];\r\n\r\n  if (!task) return <Route component={NotFound} />;\r\n\r\n  const nameForTableHead = [\"Task\", \"Time start\", \"Time end\", \"Time spend\"];\r\n  const dataForTableBody = [\r\n    task.taskName,\r\n    formatTime(task.taskStartTime),\r\n    formatTime(task.taskStartTime + task.taskSpendTime),\r\n    formatTimeTimer(task.taskSpendTime)\r\n  ];\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className={classes.infoLink}>\r\n        <Button>GO BACK</Button>\r\n      </Link>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {nameForTableHead.map((title, index) => (\r\n              <TableCell align=\"center\" key={index}>\r\n                {title}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.tasksTable}>\r\n          <TableRow>\r\n            {dataForTableBody.map((data, index) => (\r\n              <TableCell align=\"center\" key={index}>\r\n                {data}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nInfo.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(state => ({ tasks: state.tasks }))(withStyles(tasksStyle)(Info));\r\n","import React from \"react\";\r\nimport NotFound from \"componentns/NotFound\";\r\nimport TaskTimer from \"containers/TaskTimer\";\r\nimport Info from \"componentns/Tasks/Info\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\n\r\nconst RouterComponent = ({history}) => {\r\n  return (\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={TaskTimer} />\r\n        <Route exact path=\"/taskChart\" component={TaskTimer} />\r\n        <Route path=\"/task/:id\" component={Info} />\r\n        <Route component={NotFound} />\r\n        <Redirect exact path=\"/\" />\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  );\r\n};\r\nRouterComponent.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default connect(state => ({ router: state.router }))(RouterComponent);\r\n","export const setItem = (key, data) => localStorage.setItem(key, data);\r\nexport const getItem = key => localStorage.getItem(key);\r\nexport const removeItem = key => localStorage.removeItem(key);\r\nexport const clearStorage = () => localStorage.clear();\r\n","export const generate = () => {\r\n  const generatedTasks = [];\r\n  const startTime = new Date().setHours(0, 0, 0, 0);\r\n  const endTime = new Date().setHours(23, 59, 59, 999);\r\n  const amountTask = getRndInteger(10, 15);\r\n\r\n  for (let i = 0; i < amountTask; i++) {\r\n    const newTaskStartTime = getRndInteger(startTime, endTime);\r\n    const newTaskSpendTime = getRndInteger(10, 90);\r\n    const task = {\r\n      taskId: i,\r\n      taskName: `task${i}`,\r\n      taskStartTime: newTaskStartTime,\r\n      taskSpendTime: newTaskSpendTime * 60 * 1000\r\n    };\r\n    generatedTasks.push(task);\r\n  }\r\n  return generatedTasks;\r\n};\r\nfunction getRndInteger(min, max) {\r\n  return parseInt(Math.floor(Math.random() * (max - min)) + min);\r\n}\r\n","import { all, takeLatest, select, put } from \"redux-saga/effects\";\r\nimport { setItem, removeItem, clearStorage } from \"localStorage/localStorage\";\r\nimport {\r\n  ADD_TASKS,\r\n  DELETE_TASKS,\r\n  TASK_LOCALSTORAGE,\r\n  GENERATE_TASKS,\r\n  ADD_TO_STORE\r\n} from \"constants/tasks-constants\";\r\nimport { actionCreator } from \"actions/action\";\r\nimport { generate } from \"addition/GenerateTask\";\r\n\r\nexport function* addTaskLocalStorage() {\r\n  const tasks = yield select(state => state.tasks);\r\n  yield setItem(TASK_LOCALSTORAGE, JSON.stringify(tasks));\r\n}\r\nexport function* deleteTaskLocalStorage() {\r\n  const tasks = yield select(state => state.tasks);\r\n  yield removeItem(TASK_LOCALSTORAGE);\r\n  yield setItem(TASK_LOCALSTORAGE, JSON.stringify(tasks));\r\n}\r\nexport function* generateTasksSaga() {\r\n  yield clearStorage();\r\n  yield setItem(TASK_LOCALSTORAGE, JSON.stringify(generate()));\r\n  yield put(actionCreator(ADD_TO_STORE, generate()));\r\n}\r\nexport function* watchTask() {\r\n  yield all([\r\n    takeLatest(ADD_TASKS, addTaskLocalStorage),\r\n    takeLatest(DELETE_TASKS, deleteTaskLocalStorage),\r\n    takeLatest(GENERATE_TASKS, generateTasksSaga)\r\n  ]);\r\n}\r\n","import { all, takeLatest, select } from \"redux-saga/effects\";\r\nimport { setItem, removeItem } from \"localStorage/localStorage\";\r\nimport { getNameTask } from \"reducers/selectors\";\r\nimport {\r\n  START_TIMER,\r\n  STOP_TIMER,\r\n  ACTIVE_TIMER,\r\n  CHANGE_TASK_NAME\r\n} from \"constants/timer-constants\";\r\n\r\nexport function* activeTimerLocalStorage() {\r\n  const takeStart = yield select(state => state.timer);\r\n  yield setItem(ACTIVE_TIMER, JSON.stringify(takeStart));\r\n}\r\n\r\nexport function* setTaskNameToLocalStorage() {\r\n  const takeName = yield select(state => getNameTask(state));\r\n  yield setItem(CHANGE_TASK_NAME, JSON.stringify({ name: takeName }));\r\n}\r\n\r\nexport function* inactiveTimeLocalStorage() {\r\n  yield removeItem(ACTIVE_TIMER);\r\n  yield removeItem(CHANGE_TASK_NAME);\r\n}\r\n\r\nexport function* watchTimer() {\r\n  yield all([\r\n    takeLatest(START_TIMER, activeTimerLocalStorage),\r\n    takeLatest(STOP_TIMER, inactiveTimeLocalStorage),\r\n    takeLatest(CHANGE_TASK_NAME, setTaskNameToLocalStorage)\r\n  ]);\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { watchTask } from \"./tasks-saga\";\r\nimport { watchTimer } from \"./timer-saga\";\r\n\r\nexport function* mainSaga() {\r\n  yield all([watchTask(),watchTimer()]);\r\n}\r\n","import { getItem } from \"localStorage/localStorage\";\r\nimport { TASK_LOCALSTORAGE } from \"constants/tasks-constants\";\r\nimport { ACTIVE_TIMER,CHANGE_TASK_NAME}  from \"constants/timer-constants\";\r\n\r\nexport const initialState = () => {\r\n  let store = {};\r\n  const localTasks = getItem(TASK_LOCALSTORAGE);\r\n  const localTimer = getItem(ACTIVE_TIMER);\r\n  const localTaskName = getItem(CHANGE_TASK_NAME);\r\n  if (localTasks) store.tasks = JSON.parse(localTasks);\r\n  if (localTimer) store.timer = JSON.parse(localTimer);\r\n  if (localTimer && localTaskName){\r\n    store.timer.nameTask = JSON.parse(localTaskName).name;\r\n  }\r\n  return store;\r\n};\r\n","import {\r\n  START_TIMER,\r\n  STOP_TIMER,\r\n  UPDATE_TIMER,\r\n  ACTIVE_TIMER,\r\n  INACTIVE_TIMER,\r\n  START_ACTIVE_TIMER,\r\n  CHANGE_TASK_NAME\r\n} from 'constants/timer-constants';\r\n\r\nconst initialState = {\r\n  statusTimer: INACTIVE_TIMER,\r\n  startTimer: 0,\r\n  currentTime: 0,\r\n  nameTask: ''\r\n};\r\nexport const timerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case START_TIMER:\r\n      return {\r\n        ...state,\r\n        statusTimer: ACTIVE_TIMER,\r\n        startTimer: action.payload.startTimer\r\n      };\r\n    case UPDATE_TIMER:\r\n      return {\r\n        ...state,\r\n        currentTime: action.payload.currentTime\r\n      };\r\n    case CHANGE_TASK_NAME:\r\n      return {\r\n        ...state,\r\n        nameTask: action.payload.nameTask\r\n      };\r\n    case START_ACTIVE_TIMER:\r\n      return {\r\n        ...state,\r\n        statusTimer: ACTIVE_TIMER,\r\n        currentTime: action.payload.currentTime\r\n      };\r\n    case STOP_TIMER:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADD_TASKS,\r\n  DELETE_TASKS,\r\n  GENERATE_TASKS,\r\n  ADD_TO_STORE,\r\n  UPDATE_SYNC_DATA\r\n} from 'constants/tasks-constants';\r\n\r\nconst initialState = [];\r\n\r\nexport const taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TASKS:\r\n      return [...state, action.payload];\r\n    case DELETE_TASKS:\r\n      const newState = [...state];\r\n      newState.splice(action.payload, 1);\r\n      return newState;\r\n    case GENERATE_TASKS:\r\n      return initialState;\r\n    case ADD_TO_STORE:\r\n      return action.payload;\r\n    case UPDATE_SYNC_DATA:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { timerReducer } from './timer-reducers';\r\nimport { taskReducer } from './tasks-reducers';\r\n\r\nexport default combineReducers({\r\n  timer: timerReducer,\r\n  tasks: taskReducer\r\n});\r\n\r\nexport const createRootReducer = history => combineReducers({\r\n  router: connectRouter(history),\r\n  timer: timerReducer,\r\n  tasks: taskReducer\r\n})\r\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport RouterComponent from \"containers/RouterComponent\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { mainSaga } from \"saga/main-saga\";\nimport { initialState } from \"reducers/initial-state\";\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createRootReducer } from \"reducers/reducers\";\nimport { homepage } from '../package.json'\n\nconst sagaMiddleware = createSagaMiddleware();\nconst historyStage = {};\n\nif (process.env.NODE_ENV === 'production') {\n  historyStage.basename = new URL(homepage).pathname + '/'\n}\nconst history = createBrowserHistory(historyStage);\n\nfunction configureStore() {\n  const store = createStore(\n    createRootReducer(history),\n    initialState(),\n    compose(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  );\n  return store;\n}\nconst store = configureStore();\n\nsagaMiddleware.run(mainSaga);\n\n  ReactDom.render(\n    <Provider store={store}>\n      <RouterComponent history={history} />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n"],"sourceRoot":""}